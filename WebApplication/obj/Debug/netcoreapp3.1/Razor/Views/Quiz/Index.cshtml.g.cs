#pragma checksum "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "051fa39811185deaf6692aebc353d1a05b7cc11f"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Quiz_Index), @"mvc.1.0.view", @"/Views/Quiz/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\_ViewImports.cshtml"
using WebApplication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\_ViewImports.cshtml"
using WebApplication.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"051fa39811185deaf6692aebc353d1a05b7cc11f", @"/Views/Quiz/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"fa0ef8da47a84ffb33e8bc853509aa4fa5703a26", @"/Views/_ViewImports.cshtml")]
    public class Views_Quiz_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<QuestionModel[]>
    {
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
  
    ViewData["Title"] = "Оценка риска развития сахарного диабета";
    int firstQuestionNumber = 1;
    int lastQuestionNumber = Model.Length;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<h1 class=\"text-center\">");
#nullable restore
#line 8 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                   Write(ViewData["Title"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</h1>\r\n<p class=\"text-center\">Пройдите тест, чтобы узнать вероятность заболевания диабетом</p>\r\n\r\n<span id=\"currentQuestion\" style=\"display: none\">");
#nullable restore
#line 11 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                            Write(firstQuestionNumber);

#line default
#line hidden
#nullable disable
            WriteLiteral("</span>\r\n<div class=\"questions-block shadow p-3 mb-5 bg-white rounded\">\r\n\r\n    <div class=\"progress\">\r\n        <div class=\"progress-bar progress-bar-striped progress-bar-animated\" role=\"progressbar\" aria-valuenow=\"0\" aria-valuemin=\"0\"");
            BeginWriteAttribute("aria-valuemax", " aria-valuemax=\"", 622, "\"", 657, 1);
#nullable restore
#line 15 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
WriteAttributeValue("", 638, lastQuestionNumber, 638, 19, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral("></div>\r\n    </div>\r\n");
#nullable restore
#line 18 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
     using (Html.BeginForm())
    {
        for (int i = 0; i < Model.Length; i++)
        {
            int number = i + 1;


#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"question-block\"");
            BeginWriteAttribute("id", " id=\"", 886, "\"", 906, 2);
            WriteAttributeValue("", 891, "blockId_", 891, 8, true);
#nullable restore
#line 24 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
WriteAttributeValue("", 899, number, 899, 7, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" data-key=\"");
#nullable restore
#line 24 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                                                  Write(Model[i].Key);

#line default
#line hidden
#nullable disable
            WriteLiteral("\" style=\"display:none\">\r\n\r\n                <p class=\"lead text-center\">");
#nullable restore
#line 26 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                       Write(Model[i].Text);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n\r\n");
            WriteLiteral("                <div class=\"choices text-center\">\r\n");
#nullable restore
#line 30 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                     if (Model[i].AnswerChoices.Count == 0)
                    {

                        if (Model[i].Key == "BMI")
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral(@"                            <div class=""form-row"">
                                <div class=""col"">
                                    <input type=""number"" class=""form-control text-center"" name=""height"" placeholder=""Введите рост (см)"" min=""1"" required>
                                </div>
                                <div class=""col"">
                                    <input type=""number"" class=""form-control text-center"" name=""weight"" placeholder=""Введите вес (кг)"" min=""1"">
                                </div>
                            </div>
");
#nullable restore
#line 43 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <input type=\"range\" class=\"form-control-range text-center\" placeholder=\"Введите значение\" min=\"0\" max=\"30\" oninput=\"$(\'#rangeval\').html($(this).val())\">\r\n                            <span id=\"rangeval\">15</span>\r\n");
#nullable restore
#line 48 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                        }
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
#nullable restore
#line 51 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                      
                        int countChoices = Model[i].AnswerChoices.Count;
                        if (countChoices > 2)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <select class=\"custom-select my-1 mr-sm-2 text-center\">\r\n");
#nullable restore
#line 56 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                 foreach (var answer in Model[i].AnswerChoices)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "051fa39811185deaf6692aebc353d1a05b7cc11f8800", async() => {
#nullable restore
#line 58 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                                                              Write(answer.Text);

#line default
#line hidden
#nullable disable
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#nullable restore
#line 58 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                       WriteLiteral(answer.Value);

#line default
#line hidden
#nullable disable
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            BeginAddHtmlAttributeValues(__tagHelperExecutionContext, "name", 2, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            AddHtmlAttributeValue("", 2670, "choice_", 2670, 7, true);
#nullable restore
#line 58 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
AddHtmlAttributeValue("", 2677, i, 2677, 2, false);

#line default
#line hidden
#nullable disable
            EndAddHtmlAttributeValues(__tagHelperExecutionContext);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
#nullable restore
#line 59 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            </select>\r\n");
#nullable restore
#line 61 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                        }
                        else
                        {
                            int numAnswer = 0;
                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 65 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                             foreach (var answer in Model[i].AnswerChoices)
                            {
                                string idChoice = "choice_" + Model[i].Key + numAnswer;

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <div class=\"custom-control custom-radio\">\r\n                                    <input type=\"radio\"");
            BeginWriteAttribute("id", " id=\"", 3237, "\"", 3251, 1);
#nullable restore
#line 69 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
WriteAttributeValue("", 3242, idChoice, 3242, 9, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("value", " value=\"", 3252, "\"", 3273, 1);
#nullable restore
#line 69 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
WriteAttributeValue("", 3260, answer.Value, 3260, 13, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            BeginWriteAttribute("name", " name=\"", 3274, "\"", 3290, 2);
            WriteAttributeValue("", 3281, "choice_", 3281, 7, true);
#nullable restore
#line 69 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
WriteAttributeValue("", 3288, i, 3288, 2, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"custom-control-input\">\r\n                                    <label class=\"custom-control-label\"");
            BeginWriteAttribute("for", " for=\"", 3394, "\"", 3409, 1);
#nullable restore
#line 70 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
WriteAttributeValue("", 3400, idChoice, 3400, 9, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">");
#nullable restore
#line 70 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                                                                   Write(answer.Text);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label>\r\n                                </div>\r\n");
#nullable restore
#line 72 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                numAnswer++;
                            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 73 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                             
                        }
                    

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\r\n            </div>\r\n");
#nullable restore
#line 78 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("        <div class=\"invalid-feedback text-center\">Необходимо ответить на текущий вопрос, чтобы перейти к следующему</div><br>\r\n");
            WriteLiteral("        <div class=\"text-center\">\r\n            <button type=\"button\" id=\"previousQuestionBtn\" class=\"btn btn-primary\">Назад</button>\r\n            <button type=\"button\" id=\"nextQuestionBtn\" class=\"btn btn-primary\">Далее</button>\r\n        </div>\r\n");
#nullable restore
#line 85 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
    }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
</div>


<div id=""resultPredict"" class=""text-center"">


    <div id=""loadAnimation"">
        <strong>Подождите, идет загрузка...</strong>
        <div class=""d-flex justify-content-center"">
            <div class=""spinner-border text-primary"" role=""status""></div>
        </div>
    </div>

</div>


");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>

        function validateInputsQuestion(numberQuestion) {
            let number = parseInt(numberQuestion);
            let inputsRadio = $('#blockId_' + number + "" :input[type='radio']"");
            let inputsNumber = $('#blockId_' + number + "" :input[type='number']"");
            let inputsRange = $('#blockId_' + number + "" :input[type='range']"");
            let selectedOptions = $('#blockId_' + number + "" select option:selected"");

            if (inputsRange.length > 0) {
                return true;
            }
            else if (selectedOptions.length > 0) {
                return true;
            }
            else if (inputsRadio.length > 0) {
                let isValid = false;
                for (var i = 0; i < inputsRadio.length; i++) {
                    if (inputsRadio[i].checked) {
                        isValid = true;
                        break;
                    }
                }
                return isValid;
            }
        ");
                WriteLiteral(@"    else if (inputsNumber.length > 0) {
                let isValid = true;
                for (var i = 0; i < inputsNumber.length; i++) {
                    let input = parseInt(inputsNumber[i].value);

                    if (isNaN(input)) {
                        isValid = false;
                    }
                    else {
                        let min = parseInt(inputsNumber[i].min);
                        let max = parseInt(inputsNumber[i].max);

                        if (!isNaN(min) && input < min) {
                            isValid = false;
                        }
                        if (!isNaN(max) && input > max) {
                            isValid = false;
                        }
                    }
                }
                return isValid;
            }
        }

        // Расчет индекса массы тела (вес в кг, рост в см)
        function calculateBmi(weight, height) {
            let w = parseInt(weight);
            let h = parseInt(h");
                WriteLiteral(@"eight);

            if (w > 0 && h > 0) {

                let bmi = w / ((h / 100) * (h / 100));
                return bmi;
            }
            else {
                return 0;
            }
        }

        function getAnswers() {
            let answers = new Array();

            for (let i = 0; i < ");
#nullable restore
#line 172 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                           Write(Model.Length);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"; i++) {
                let block = '#blockId_' + (i + 1);

                let key = $(block).data('key');
                let value = NaN;

                let inputs = $(block + ' :input');
                let selectedOptions = $(block + "" select option:selected"");

                // Получиние значения ответа
                if (selectedOptions.length > 0) {
                    value = parseInt(selectedOptions[0].value);
                }
                else {
                    for (let i = 0; i < inputs.length; i++) {
                        if (inputs[i].type === 'radio' && inputs[i].checked) {

                            value = parseInt(inputs[i].value);
                            break;
                        }
                        else if (inputs[i].type === 'range') {
                            value = parseInt(inputs[i].value);
                            break;
                        }
                        else if (inputs[i].type === 'number') {
           ");
                WriteLiteral(@"                 value = parseInt(inputs[i].value);
                            if (key === 'BMI') {
                                let weight = $(""input[name='weight']"").val();
                                let height = $(""input[name='height']"").val();
                                value = calculateBmi(weight, height);
                            }
                            break;
                        }
                    }
                }

                // Добавление значения ответа в список ответов
                if (!isNaN(value)) {
                    let answer = new Object();
                    answer.QuestionKey = key;
                    answer.AnswerValue = value;
                    answers.push(answer);
                }

            }
            console.log(answers);
            return answers;
        }

        // Изменить состояние отключения элемента
        function changeStateDisabled(nameElement, isDisable) {
            $(nameElement).prop('disa");
                WriteLiteral(@"bled', isDisable);
        }

        // Изменить состояние прогресса прохождения опроса
        function setProgress(currentValue) {
            let num = parseInt(currentValue);
            let minValue = parseInt($('.progress-bar').attr(""aria-valuemin""));
            let maxValue = parseInt($('.progress-bar').attr(""aria-valuemax""));

            if (num >= minValue && num <= maxValue) {
                $('.progress-bar').attr(""aria-valuenow"", num);

                let percentComplete = parseInt((num / maxValue) * 100);
                $('.progress-bar').css(""width"", percentComplete + '%');
                $('.progress-bar').text(percentComplete + '%');
            }
        }

    </script>

    <script>

        $(document).ready(function () {

            changeStateDisabled('#previousQuestionBtn', true);
            $('#blockId_1').css(""display"", ""block"");
            $('#loadAnimation').css(""display"", ""none"");

            // Обработчик события нажатия кнопки перехода к сле");
                WriteLiteral(@"дующему вопросу
            $('#nextQuestionBtn').on('click', function () {

                let questionNumber = parseInt($('#currentQuestion').text());
                let nextQuestionNumber = questionNumber + 1;

                let isValid = validateInputsQuestion(questionNumber);
                if (!isValid) {
                    $('form .invalid-feedback').css('display', 'block');
                    return;
                }
                else {
                    $('form .invalid-feedback').css('display', 'none');
                }

                setProgress(questionNumber);

                // Отправка формы, если текущий вопрос последний
                if (questionNumber === ");
#nullable restore
#line 269 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                  Write(lastQuestionNumber);

#line default
#line hidden
#nullable disable
                WriteLiteral(@") {
                    $('form').submit();
                    changeStateDisabled('#previousQuestionBtn', true);
                    changeStateDisabled('#nextQuestionBtn', true);
                    $('#loadAnimation').css(""display"", ""block"");
                    return;
                }

                let currentBlock = '#blockId_' + questionNumber;
                $(currentBlock).css(""display"", ""none"");

                let nextBlock = '#blockId_' + nextQuestionNumber;
                $(nextBlock).css(""display"", ""block"");

                $('#currentQuestion').text(nextQuestionNumber);

                if (nextQuestionNumber === 2) {

                    $('#previousQuestionBtn').prop(""disabled"", false);
                }
                else if (nextQuestionNumber === ");
#nullable restore
#line 289 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                           Write(lastQuestionNumber);

#line default
#line hidden
#nullable disable
                WriteLiteral(@") {
                    $('#nextQuestionBtn').text(""Получить результат"");
                }
            });

            // Обработчик события нажатия кнопки перехода к прошлому вопросу
            $('#previousQuestionBtn').on('click', function () {

                let questionNumber = parseInt($('#currentQuestion').text());
                let previousQuestionNumber = questionNumber - 1;

                setProgress(previousQuestionNumber - 1);
                $('form .invalid-feedback').css('display', 'none');

                let currentBlock = '#blockId_' + questionNumber;
                $(currentBlock).css(""display"", ""none"");

                let nextBlock = '#blockId_' + previousQuestionNumber;
                $(nextBlock).css(""display"", ""block"");

                $('#currentQuestion').text(previousQuestionNumber);

                if (questionNumber === ");
#nullable restore
#line 311 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                                  Write(lastQuestionNumber);

#line default
#line hidden
#nullable disable
                WriteLiteral(@") {
                    $('#nextQuestionBtn').text(""Дальше"");
                }
                if (previousQuestionNumber === 1) {
                    changeStateDisabled('#previousQuestionBtn', true);
                }
            });

            // Обработчик события отправки формы
            $('form').submit(function (e) {

                e.preventDefault();

                setProgress(");
#nullable restore
#line 324 "C:\Users\Artem\Desktop\diabetes-predictor\WebApplication\Views\Quiz\Index.cshtml"
                       Write(lastQuestionNumber);

#line default
#line hidden
#nullable disable
                WriteLiteral(@");

                let answers = getAnswers();
                let dataJson = JSON.stringify(answers);

                $.ajax({
                    type: 'POST',
                    url: '/Predict/GetPredict',
                    contentType: 'application/json',
                    data: dataJson,
                    success: function (data) {
                        $('#resultPredict').html(data);
                    },
                    error: function (data) {
                        alert(""Возникла непредвиденная ошибка. Попробуйте повторить действие позже."");
                        console.log(data);
                    },
                    complete: function (data) {
                        changeStateDisabled('#previousQuestionBtn', false);
                        changeStateDisabled('#nextQuestionBtn', false);
                        $('#loadAnimation').css(""display"", ""none"");
                    }
                });

            });
        });

    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<QuestionModel[]> Html { get; private set; }
    }
}
#pragma warning restore 1591
